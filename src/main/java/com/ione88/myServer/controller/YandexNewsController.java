package com.ione88.myServer.controller;

import com.ione88.myServer.entity.YandexNews;
import com.ione88.myServer.repository.YandexNewsRepository;
import com.ione88.myServer.service.YandexNewsService;
import com.ione88.myServer.service.impl.YandexNewsServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.Map;


@Controller    // This means that this class is a Controller
@RequestMapping(path="/news") // This means URL's start with /demo (after Application path)
public class YandexNewsController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
    private YandexNewsRepository yandexNewsRepository;
    private YandexNewsService yandexNewsService;

    @GetMapping
    public String news(Map<String, Object> model) {
        Iterable<YandexNews> yandexNews = yandexNewsRepository.findAll();
        model.put("news", yandexNews);
        return "news";
    }

    @PostMapping(path="filter")
    public String filter(@RequestParam String filter, Map<String, Object> model) {
        Iterable<YandexNews> yandexNews;

        if (filter != null && !filter.isEmpty()) {
            yandexNews = yandexNewsRepository.findByTitleContaining(filter);
        } else {
            yandexNews = yandexNewsRepository.findAll();
        }

        model.put("news", yandexNews);

        return "news";
    }

	@PutMapping(path="/add", consumes = "application/json", produces = "application/json") // Map ONLY PUT Requests
	public @ResponseBody String createYandexNews (@RequestBody YandexNews yandexNews) {

        yandexNewsService = new YandexNewsServiceImpl(yandexNewsRepository);
        return yandexNewsService.createYandexNews(yandexNews);
	}

}